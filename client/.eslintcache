[{"I:\\collage_project\\library_app\\client\\src\\App.js":"1","I:\\collage_project\\library_app\\client\\src\\components\\Nav.js":"2","I:\\collage_project\\library_app\\client\\src\\reportWebVitals.js":"3","I:\\collage_project\\library_app\\client\\src\\pages\\LogPage.js":"4","I:\\collage_project\\library_app\\client\\src\\index.js":"5","I:\\collage_project\\library_app\\client\\src\\components\\CustomTable.js":"6","I:\\collage_project\\library_app\\client\\src\\routes.js":"7","I:\\collage_project\\library_app\\client\\src\\pages\\AuthPage.js":"8","I:\\collage_project\\library_app\\client\\src\\components\\CustomForm.js":"9","I:\\collage_project\\library_app\\client\\src\\pages\\SettingsPage.js":"10","I:\\collage_project\\library_app\\client\\src\\pages\\UsersPage.js":"11","I:\\collage_project\\library_app\\client\\src\\pages\\BooksPage.js":"12","I:\\collage_project\\library_app\\client\\src\\components\\LogDialog.js":"13","I:\\collage_project\\library_app\\client\\src\\hooks\\useApi.js":"14","I:\\collage_project\\library_app\\client\\src\\hooks\\auth.hook.js":"15","I:\\collage_project\\library_app\\client\\src\\context\\DataContext.js":"16","I:\\collage_project\\library_app\\client\\src\\components\\ActionButton.js":"17","I:\\collage_project\\library_app\\client\\src\\components\\BookDialog.js":"18","I:\\collage_project\\library_app\\client\\src\\components\\UserDialog.js":"19"},{"size":652,"mtime":1608659029986,"results":"20","hashOfConfig":"21"},{"size":2289,"mtime":1608652442705,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1608543942257,"results":"23","hashOfConfig":"21"},{"size":1128,"mtime":1608709267413,"results":"24","hashOfConfig":"21"},{"size":463,"mtime":1608617611436,"results":"25","hashOfConfig":"21"},{"size":5269,"mtime":1608662010588,"results":"26","hashOfConfig":"21"},{"size":783,"mtime":1608658149914,"results":"27","hashOfConfig":"21"},{"size":3722,"mtime":1608651669180,"results":"28","hashOfConfig":"21"},{"size":1229,"mtime":1608606967232,"results":"29","hashOfConfig":"21"},{"size":2412,"mtime":1608639284739,"results":"30","hashOfConfig":"21"},{"size":1012,"mtime":1608693508480,"results":"31","hashOfConfig":"21"},{"size":831,"mtime":1608708857419,"results":"32","hashOfConfig":"21"},{"size":6761,"mtime":1608724364867,"results":"33","hashOfConfig":"21"},{"size":853,"mtime":1608693910317,"results":"34","hashOfConfig":"21"},{"size":756,"mtime":1608650658432,"results":"35","hashOfConfig":"21"},{"size":83,"mtime":1608650961745,"results":"36","hashOfConfig":"21"},{"size":3002,"mtime":1608661488069,"results":"37","hashOfConfig":"21"},{"size":2869,"mtime":1608708389359,"results":"38","hashOfConfig":"21"},{"size":4702,"mtime":1608708115610,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"al8lpy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"I:\\collage_project\\library_app\\client\\src\\App.js",[],["88","89"],"I:\\collage_project\\library_app\\client\\src\\components\\Nav.js",[],["90","91"],"I:\\collage_project\\library_app\\client\\src\\reportWebVitals.js",[],["92","93"],"I:\\collage_project\\library_app\\client\\src\\pages\\LogPage.js",["94"],"import React, {useContext, useState} from 'react'\r\nimport { CustomTable } from '../components/CustomTable'\r\nimport { DataContext } from '../context/DataContext'\r\nimport { useApi } from '../hooks/useApi'\r\n\r\nexport const LogPage = () => {\r\n\r\n\tconst userData = useContext(DataContext)\r\n\r\n\tconst {request} = useApi()\r\n\r\n\tconst [data, setData] = useState({\r\n\t\tcolumns: [\r\n\t\t\t{title: 'Дата', field: 'name'},\r\n\t\t\t{title: 'Пользователь', field: 'user'},\r\n\t\t\t{title: 'До', field: 'endDate'},\r\n\t\t\t{title: 'Статус', field: 'status'},\r\n\t\t],\r\n\t\tdata: query =>\r\n\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t// prepare your data and then call resolve like this:\r\n\t\t\t\trequest('api/log', 'GET', null, {\r\n\t\t\t\t\tAuthorization: `Bearer ${userData.token}`\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(result => {\r\n\t\t\t\t\t\tresolve({\r\n\t\t\t\t\t\t\tdata: result,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t})\r\n\t})\r\n\r\n\tconst addLog = () => {\r\n\t\tconsole.log('add')\r\n\t}\r\n\tconst deleteLog = () => {\r\n\t\tconsole.log('delete')\r\n\t}\r\n\tconst updateLog = () => {\r\n\t\tconsole.log('update')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tCustomTable(data, addLog, deleteLog, updateLog)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n",["95","96"],"I:\\collage_project\\library_app\\client\\src\\index.js",[],"I:\\collage_project\\library_app\\client\\src\\components\\CustomTable.js",["97","98"],"import MaterialTable from 'material-table'\r\nimport { createRef, useState } from 'react'\r\nimport { LogDialog } from './LogDialog'\r\n\r\nexport function CustomTable(data, addFunc = null, deleteFunc = null, updateFunc = null) {\r\n\r\n  // const [open, setOpen] = useState(false)\r\n\r\n  // const addButtonClick = (rowData) => {\r\n  //   console.log(rowData)\r\n  //   setOpen(!open)\r\n  // }\r\n\r\n  // const handleCloseDialog = (data) => {\r\n  //   setOpen(prev => !prev)\r\n  // }\r\n\r\n  const tableRef = createRef();\r\n\r\n  return (\r\n    <>\r\n      {/* <LogDialog open={open} close={handleCloseDialog} title='Новый пользователь'/> */}\r\n      <MaterialTable\r\n        columns={data.columns}\r\n        data={data.values}\r\n        title=\"\"\r\n        tableRef={tableRef}\r\n        detailPanel={rowData => {\r\n          return (\r\n            <div>\r\n              {rowData.name}\r\n            </div>\r\n          )\r\n        }}\r\n        actions={[\r\n          // {\r\n          //   icon: 'add',\r\n          //   tooltip: 'Создать',\r\n          //   isFreeAction: true,\r\n          //   onClick: addButtonClick\r\n          // },\r\n          {\r\n            icon: 'refresh',\r\n            tooltip: 'Обновить',\r\n            isFreeAction: true,\r\n            onClick: () => tableRef.current && tableRef.current.onQueryChange(),\r\n          }\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n          exportButton: true,\r\n          searchFieldAlignment: 'left',\r\n          columnsButton: true\r\n        }}\r\n        onRowClick={(event, rowData, togglePanel) => togglePanel()}\r\n        editable={{\r\n          // onRowAdd: newData =>\r\n          //   new Promise((resolve, reject) => {\r\n          //     setTimeout(() => {\r\n          //       // setData([...data, newData]);\r\n                \r\n          //       resolve();\r\n          //     }, 1000)\r\n          //   }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataUpdate = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataUpdate[index] = newData;\r\n                // setData([...dataUpdate]);\r\n\r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                // const dataDelete = [...data];\r\n                // const index = oldData.tableData.id;\r\n                // dataDelete.splice(index, 1);\r\n                // setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n        localization={{\r\n                  body: {\r\n                      emptyDataSourceMessage: \"Нет данных\",\r\n                      addTooltip: 'Создать',\r\n                      deleteTooltip: 'Удалить',\r\n                      editTooltip: 'Редактировать',\r\n                      filterRow: {\r\n                          filterTooltip: 'Сортировка'\r\n                      },\r\n                      editRow: {\r\n                          deleteText: 'Точно хотите удалить?',\r\n                          cancelTooltip: 'Отмена',\r\n                          saveTooltip: 'Принять'\r\n                      }\r\n                  },\r\n                  grouping: {\r\n                      placeholder: \"Сортировать\",\r\n                      groupedBy: 'Сортировка по:'\r\n                  },\r\n                  header: {\r\n                      actions: 'Действия'\r\n                  },\r\n                  pagination: {\r\n                      labelDisplayedRows: '{from}-{to} из {count}',\r\n                      labelRowsSelect: 'строчек',\r\n                      labelRowsPerPage: 'строчек на странице:',\r\n                      firstAriaLabel: 'Первая страница',\r\n                      firstTooltip: 'Первая страница',\r\n                      previousAriaLabel: 'Предыдущая страница',\r\n                      previousTooltip: 'Предыдущая страница',\r\n                      nextAriaLabel: 'Следующая страница',\r\n                      nextTooltip: 'Следующая страница',\r\n                      lastAriaLabel: 'Последняя страница',\r\n                      lastTooltip: 'Последняя страница'\r\n                  },\r\n                  toolbar: {\r\n                      addRemoveColumns: 'Ajouter ou supprimer des colonnes',\r\n                      nRowsSelected: '{0} ligne(s) sélectionée(s)',\r\n                      showColumnsTitle: 'Показать названия колонок',\r\n                      showColumnsAriaLabel: 'Показать названия колонок',\r\n                      exportTitle: 'Экспорт',\r\n                      exportAriaLabel: 'Экспорт',\r\n                      exportName: 'Скачать в виде таблицы',\r\n                      searchTooltip: 'Поиск',\r\n                      searchPlaceholder: 'Поиск'\r\n                  }\r\n              }}\r\n      />\r\n    </>\r\n  )\r\n}","I:\\collage_project\\library_app\\client\\src\\routes.js",[],"I:\\collage_project\\library_app\\client\\src\\pages\\AuthPage.js",["99","100","101"],"import { useState, useContext } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useApi } from '../hooks/useApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DataContext } from '../context/DataContext'\r\n// import '../styles/index.css'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(DataContext)\r\n    const {loading, error, clearError, request} = useApi()\r\n    const [form, setForm] = useState({\r\n        login: '',\r\n        password: ''\r\n    })\r\n\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const handleChange = e => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n        if (form.login && form.password) {\r\n            setDisabled(false)\r\n        } else {\r\n            setDisabled(true)\r\n        }\r\n    }\r\n\r\n    const signInHandler = async (e) => {\r\n        try {\r\n            if (e.key === 'Enter' || e.type == 'click') {\r\n                const data = await request('/api/auth/signin', 'POST', {...form})\r\n                auth.signIn(data.token, data.userId)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row'>\r\n            <Grid item xs={false} sm={1} md={2} lg={3} xl={4}/>\r\n            <Grid item container xs={12} sm={10} md={8} lg={6} xl={4} >\r\n                <Grid item xs={12}>\r\n                    <Typography variant='h3'>Авторизация</Typography>\r\n                </Grid> \r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        variant='outlined'\r\n                        label='Логин'\r\n                        id='login' \r\n                        type=\"login\"\r\n                        // required\r\n                        style={{width: '100%'}}\r\n                        name='login'\r\n                        // autoComplete='off' \r\n                        placeholder='Введите логин' \r\n                        className=\"validate input__login\" \r\n                        onChange={handleChange} \r\n                        onKeyPress={signInHandler}\r\n                        value={form.login}\r\n                    />\r\n                </Grid>  \r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                        variant='outlined'\r\n                        label='Пароль'\r\n                        id='pw' \r\n                        type=\"password\" \r\n                        // required\r\n                        style={{width: '100%'}}\r\n                        name='password'\r\n                        // autoComplete='off' \r\n                        placeholder='Введите пароль' \r\n                        className=\"validate input__pw\"\r\n                        onChange={handleChange} \r\n                        onKeyPress={signInHandler}\r\n                        value={form.password}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button \r\n                        // disabled='true'\r\n                        variant='contained'\r\n                        name='button'\r\n                        color='primary'\r\n                        disabled={disabled}\r\n                        fullWidth\r\n                        onClick={signInHandler}\r\n                        disabled={loading}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                    <div>{error}</div>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={false} sm={1} md={2} lg={3} xl={4}/>\r\n        </Grid>\r\n    )\r\n}\r\n","I:\\collage_project\\library_app\\client\\src\\components\\CustomForm.js",["102"],"I:\\collage_project\\library_app\\client\\src\\pages\\SettingsPage.js",["103","104","105","106"],"import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { BooksPage } from './BooksPage'\r\nimport { UsersPage } from './UsersPage'\r\nimport { CustomTable } from '../components/CustomTable'\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport function SettingsPage() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n\t};\r\n\t\r\n\tconst [data, setData] = useState({\r\n\t\tcolumns: [\r\n\t\t\t{title: 'Название', field: 'name'}\r\n\t\t],\r\n\t\tdata: [\r\n\t\t\t{name: 'something'}\r\n\t\t]\r\n\t})\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color='transparent' style={{boxShadow: 'none'}}>\r\n        <Tabs \r\n\t\t\t\t\tvalue={value} \r\n\t\t\t\t\tonChange={handleChange} \r\n\t\t\t\t\taria-label=\"simple tabs example\"\r\n\t\t\t\t\tcentered\r\n\t\t\t\t>\r\n          <Tab label=\"Пользователи\" {...a11yProps(0)} />\r\n          <Tab label=\"Книги\" {...a11yProps(1)} />\r\n          {/* <Tab label=\"Сотурдники\" {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <UsersPage/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n\t\t\t\t<BooksPage/>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={2}>\r\n        {customTable(data)}\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n}","I:\\collage_project\\library_app\\client\\src\\pages\\UsersPage.js",["107"],"import {useContext, useState} from 'react'\r\nimport { CustomTable } from '../components/CustomTable'\r\nimport { DataContext } from '../context/DataContext'\r\nimport { useApi } from '../hooks/useApi'\r\n\r\nexport const UsersPage = () => {\r\n\r\n\tconst {request} = useApi()\r\n\r\n\tconst userData = useContext(DataContext)\r\n\tconst [data, setData] = useState({\r\n\t\tcolumns: [\r\n\t\t\t{title: 'Имя', field: 'name'},\r\n\t\t\t{title: 'Фамилия', field: 'surname'},\r\n\t\t\t{title: 'Отчество', field: 'patronomyc'},\r\n\t\t\t{title: 'Роль', field: 'role'},\r\n\t\t\t{title: 'Статус', field: 'status'},\r\n\t\t],\r\n\t\tvalues: query =>\r\n\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\t// prepare your data and then call resolve like this:\r\n          request('api/user', 'GET', null, {\r\n\t\t\t\t\t\tAuthorization: `Bearer ${userData.token}`\r\n\t\t\t\t\t})\r\n            .then(result => {\r\n              resolve({\r\n                data: result,\r\n              })\r\n            })\r\n\t\t\t})\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{CustomTable(data)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","I:\\collage_project\\library_app\\client\\src\\pages\\BooksPage.js",["108"],"I:\\collage_project\\library_app\\client\\src\\components\\LogDialog.js",["109","110","111","112","113","114","115","116"],"I:\\collage_project\\library_app\\client\\src\\hooks\\useApi.js",[],"I:\\collage_project\\library_app\\client\\src\\hooks\\auth.hook.js",["117"],"import { useState, useCallback, useEffect } from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n\r\n\tconst [token, setToken] = useState(null)\r\n\tconst [userId, setUserId] = useState(null)\r\n\r\n\tconst signIn = useCallback((webToken, id) => {\r\n\t\tsetToken(webToken)\r\n\t\tsetUserId(userId)\r\n\r\n\t\tlocalStorage.setItem(storageName, JSON.stringify({\r\n\t\t\tuserId: id, token: webToken\r\n\t\t}))\r\n\t}, [])\r\n\r\n\tconst signOut = useCallback(() => {\r\n\t\tsetToken(null)\r\n\t\tsetUserId(null)\r\n\t\tlocalStorage.removeItem(storageName)\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n\t\tif (data && data.token) {\r\n\t\t\tsignIn(data.token, data.userId)\r\n\t\t}\r\n\t}, [signIn])\r\n\r\n\treturn {signIn, signOut, token, userId}\r\n}","I:\\collage_project\\library_app\\client\\src\\context\\DataContext.js",[],"I:\\collage_project\\library_app\\client\\src\\components\\ActionButton.js",["118","119","120"],"I:\\collage_project\\library_app\\client\\src\\components\\BookDialog.js",["121"],"I:\\collage_project\\library_app\\client\\src\\components\\UserDialog.js",["122","123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"125","replacedBy":"131"},{"ruleId":"127","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":12,"column":15,"nodeType":"135","messageId":"136","endLine":12,"endColumn":22},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"133","severity":1,"message":"139","line":2,"column":21,"nodeType":"135","messageId":"136","endLine":2,"endColumn":29},{"ruleId":"133","severity":1,"message":"140","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"141","line":12,"column":28,"nodeType":"135","messageId":"136","endLine":12,"endColumn":38},{"ruleId":"142","severity":1,"message":"143","line":31,"column":45,"nodeType":"144","messageId":"145","endLine":31,"endColumn":47},{"ruleId":"146","severity":1,"message":"147","line":90,"column":25,"nodeType":"148","endLine":90,"endColumn":43},{"ruleId":"133","severity":1,"message":"149","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"133","severity":1,"message":"150","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":21},{"ruleId":"133","severity":1,"message":"151","line":54,"column":9,"nodeType":"135","messageId":"136","endLine":54,"endColumn":16},{"ruleId":"133","severity":1,"message":"152","line":61,"column":9,"nodeType":"135","messageId":"136","endLine":61,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":61,"column":15,"nodeType":"135","messageId":"136","endLine":61,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":11,"column":15,"nodeType":"135","messageId":"136","endLine":11,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":12,"column":15,"nodeType":"135","messageId":"136","endLine":12,"endColumn":22},{"ruleId":"133","severity":1,"message":"153","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":25},{"ruleId":"133","severity":1,"message":"154","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":19},{"ruleId":"133","severity":1,"message":"155","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":18},{"ruleId":"133","severity":1,"message":"156","line":11,"column":8,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"157","line":14,"column":8,"nodeType":"135","messageId":"136","endLine":14,"endColumn":16},{"ruleId":"133","severity":1,"message":"158","line":28,"column":10,"nodeType":"135","messageId":"136","endLine":28,"endColumn":15},{"ruleId":"133","severity":1,"message":"159","line":52,"column":8,"nodeType":"135","messageId":"136","endLine":52,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":80,"column":6,"nodeType":"162","endLine":80,"endColumn":15,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":17,"column":5,"nodeType":"162","endLine":17,"endColumn":7,"suggestions":"165"},{"ruleId":"133","severity":1,"message":"166","line":40,"column":21,"nodeType":"135","messageId":"136","endLine":40,"endColumn":33},{"ruleId":"133","severity":1,"message":"167","line":45,"column":18,"nodeType":"135","messageId":"136","endLine":45,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":59,"column":5,"nodeType":"170","messageId":"171","endLine":66,"endColumn":4},{"ruleId":"133","severity":1,"message":"153","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":25},{"ruleId":"133","severity":1,"message":"153","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":25},{"ruleId":"133","severity":1,"message":"172","line":20,"column":9,"nodeType":"135","messageId":"136","endLine":20,"endColumn":13},{"ruleId":"133","severity":1,"message":"173","line":20,"column":15,"nodeType":"135","messageId":"136","endLine":20,"endColumn":22},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],["174"],["175"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar",["174"],["175"],"'useState' is defined but never used.","'LogDialog' is defined but never used.","'clearError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","'CustomTable' is defined but never used.","'classes' is assigned a value but never used.","'data' is assigned a value but never used.","'DialogContentText' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'sleep' is defined but never used.","'handleChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'request' and 'userData.token'. Either include them or remove the dependency array.","ArrayExpression",["176"],"React Hook useCallback has a missing dependency: 'userId'. Either include it or remove the dependency array. You can also do a functional update 'setUserId(u => ...)' if you only need 'userId' in the 'setUserId' call.",["177"],"'setDirection' is assigned a value but never used.","'setHidden' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [loading, request, userData.token]",{"range":"182","text":"183"},"Update the dependencies array to be: [userId]",{"range":"184","text":"185"},[2692,2701],"[loading, request, userData.token]",[409,411],"[userId]"]